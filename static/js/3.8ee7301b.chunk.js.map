{"version":3,"sources":["TrailerVideo.js","firebase.js","DetailPage.js","request.js","Header.js","Row.js","WishList.js","RowList.js","SearchMovies.js","Nav.js","HomePage.js","SectionPage.js","NetflixApp.js"],"names":["TrailerVideo","movieTrailerURL","isTrailerShow","closeTrailer","opts","height","window","screen","width","playerVars","autoplay","className","style","top","videoId","zIndex","opacity","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","DetailPage","movie","playHandle","addToWishList","removeFromWishList","useState","NotInWishList","setNotInWishList","isAnnounceWL","setIsAnnounceWL","backgroundImg","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","checkWishList","Object","keys","length","undefined","id","collection","doc","toString","get","then","exists","to","src","poster_path","title","original_title","original_name","release_date","split","reverse","join","vote_average","overview","console","log","setTimeout","handleClick","CSSTransition","in","timeout","classNames","unmountOnExit","BASE_URL","key","type","Trending","Netflix","Action","Animation","Comedy","Drama","Honor","Crime","Header","changeDetail","setMovie","fetchTrending","a","fetch","movieList","json","data","results","Math","floor","random","useEffect","name","slice","e","Row","MovieList","setMovieList","fetchByTitle","map","WishList","wishList","setWishList","onSnapshot","snapshot","tempList","docs","movieChange","RowList","arrType","eachType","SearchMovies","isSearchOpen","searchInput","setSearchInput","searchList","setSearchList","searchingMovie","transform","value","onChange","input","target","Nav","changeSection","isNavClose","setNavClose","isBlackNav","setIsBlackNav","setIsSearchOpen","addEventListener","scrollY","href","color","innerText","pre","HomePage","SectionPage","section","movies","setMovies","fetchSection","scrollTo","calculateVote","vote","arr","round","i","push","NetflixApp","setMovieTrailerURL","detailMovie","setDetailMovie","setIsTrailerShow","setSection","movieTrailer","response","urlParams","URLSearchParams","URL","search","alert","set","delete","render","location","TransitionGroup","pathname","path","exact","component"],"mappings":"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","file":"static/js/3.8ee7301b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport YouTube from 'react-youtube'\r\nimport './TrailerVideo.css'\r\n\r\nfunction TrailerVideo({ movieTrailerURL, isTrailerShow, closeTrailer }) {\r\n    const TrailerHide = {\r\n        top: '200%',\r\n    }\r\n    const TrailerShow = {\r\n        top: \"50%\",\r\n    }\r\n    const modalHide = {\r\n        zIndex: -1,\r\n        opacity: 0\r\n    }\r\n    const modalShow = {\r\n        zIndex: 5,\r\n        opacity: 1\r\n    }\r\n    const opts = {\r\n        height: window.screen.width > 1000 ? '390' : \"190\",\r\n        width: window.screen.width > 1000 ? '640' : \"240\",\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"Trailer_Container\" style={isTrailerShow ? TrailerShow : TrailerHide}>\r\n                <YouTube videoId={movieTrailerURL} opts={opts} />\r\n            </div>\r\n            <div\r\n                className='modal'\r\n                style={isTrailerShow ? modalShow : modalHide}\r\n                onClick={() => closeTrailer()}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrailerVideo\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyCeJVEtGXePht-4bAKtLo08Dw9EX5V_PJU\",\r\n    authDomain: \"netflixcloneapp-e05c6.firebaseapp.com\",\r\n    projectId: \"netflixcloneapp-e05c6\",\r\n    storageBucket: \"netflixcloneapp-e05c6.appspot.com\",\r\n    messagingSenderId: \"116475196406\",\r\n    appId: \"1:116475196406:web:95ae5b0db5eddf3d2f0dd7\",\r\n    measurementId: \"G-BBFVT647EY\"\r\n});\r\nconst db = firebase.firestore()\r\n\r\nexport { db }","import React, { useState, useEffect } from 'react'\r\nimport './DetailPage.css'\r\nimport { BiRightArrow } from 'react-icons/bi'\r\nimport { AiOutlinePlus, AiOutlineArrowLeft, AiOutlineMinus } from 'react-icons/ai'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { MdDone } from 'react-icons/md'\r\nimport { db } from './firebase'\r\n\r\nfunction DetailPage({ movie, playHandle, addToWishList, removeFromWishList }) {\r\n    const [NotInWishList, setNotInWishList] = useState(false)\r\n    const [isAnnounceWL, setIsAnnounceWL] = useState(false)\r\n    let backgroundImg = {\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: window.screen.width > 1000 ?\r\n            `linear-gradient(rgba(0,0,0,0.8),rgba(0,0,0,0.5)),\r\n        url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`\r\n            : `linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.2)),\r\n        url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\r\n        backgroundPosition: 'center',\r\n    }\r\n\r\n    const checkWishList = (movie) => {\r\n        if (Object.keys(movie).length !== 0 && movie.id !== undefined) {\r\n            const movieList = db.collection(\"wishList\").doc(movie?.id.toString());\r\n            movieList.get()\r\n                .then((doc) => {\r\n                    if (!doc.exists) setNotInWishList(true)\r\n                    else setNotInWishList(false)\r\n                })\r\n        }\r\n        else {\r\n            return\r\n        }\r\n    }\r\n    const handleClick = (movie) => {\r\n        checkWishList(movie)\r\n\r\n        if (NotInWishList) {\r\n            addToWishList(movie)\r\n            console.log(\"add\")\r\n        }\r\n        else {\r\n            removeFromWishList(movie)\r\n            console.log(\"remove\")\r\n        }\r\n\r\n        setIsAnnounceWL(true)\r\n        setTimeout(() => setIsAnnounceWL(false), 600)\r\n    }\r\n    checkWishList(movie)\r\n\r\n    return (\r\n        <div className=\"page\"\r\n            style={window.screen.width > 1000 ? backgroundImg : {}}\r\n        >\r\n            <div className=\"detailPage\">\r\n                <NavLink to=\"/netflix-clone-app/\">\r\n                    <AiOutlineArrowLeft className=\"return_btn\" />\r\n                </NavLink>\r\n                <div\r\n                    className=\"detailPage_responsiveBackground\"\r\n                    style={window.screen.width <= 1000 ? backgroundImg : {}}\r\n                ></div>\r\n                <div className='detail_img_container'>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${movie?.poster_path}`} height=\"100%\" />\r\n                </div>\r\n                <div className=\"detail_content\">\r\n                    <h1>{movie?.title || movie?.original_title || movie?.original_name}</h1>\r\n                    <div className=\"detail_content_dateNmatch\">\r\n                        <p className='detail_content_date'>{movie?.release_date?.split('-').reverse().join('/')}</p>\r\n                        <p className=\"detail_content_match\">{movie?.vote_average * 10}% Match</p>\r\n                    </div>\r\n                    <p className='detail_content_overview'>{movie?.overview}</p>\r\n                    <div className=\"detail_btn\">\r\n                        <button className='detail_btn_play' onClick={() => playHandle(movie)}>\r\n                            <BiRightArrow className='detail_btn_icons' />   PLAY\r\n                        </button>\r\n                        <button className=\"detail_btn_watchList\" onClick={() => { handleClick(movie) }}>\r\n                            {/*change icon when movie in wish list*/}\r\n\r\n                            {!NotInWishList ?\r\n                                <AiOutlineMinus className='detail_btn_icons' /> :\r\n                                <AiOutlinePlus className='detail_btn_icons' />\r\n                            }\r\n\r\n                            {!NotInWishList ? \"REMOVE\" : \"MY LIST\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CSSTransition\r\n                in={isAnnounceWL} timeout={300}\r\n                classNames=\"alert\"\r\n                unmountOnExit\r\n            >\r\n\r\n\r\n                <div className=\"addToWL\">\r\n                    <MdDone />\r\n                </div>\r\n\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","const BASE_URL = 'https://api.themoviedb.org/3/'\r\nconst key = 'd03ccd3f8ae255e9b5fa0f7c48581e8c'\r\nconst type = {\r\n    Trending: `trending/all/day?api_key=${key}`,\r\n    Netflix: `discover/tv?api_key=${key}&with_networks=213`,\r\n    Action: `discover/movie?api_key=${key}&with_genres=28`,\r\n    Animation: `discover/movie?api_key=${key}&with_genres=16`,\r\n    Comedy: `discover/movie?api_key=${key}&with_genres=35`,\r\n    Drama: `discover/movie?api_key=${key}&with_genres=18`,\r\n    Honor: `discover/movie?api_key=${key}&with_genres=27`,\r\n    Crime: `discover/movie?api_key=${key}&with_genres=80`\r\n}\r\nexport { BASE_URL, type, key }","import React, { useEffect, useState } from 'react'\r\nimport './Header.css'\r\nimport { BASE_URL, type } from './request'\r\nimport { AiFillCaretRight } from 'react-icons/ai'\r\nimport { CgDetailsMore } from 'react-icons/cg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Header({ changeDetail, playHandle }) {\r\n    const [movie, setMovie] = useState([])\r\n    const fetchTrending = async () => {\r\n\r\n        fetch('https://api.themoviedb.org/3/trending/all/day?api_key=d03ccd3f8ae255e9b5fa0f7c48581e8c')\r\n            .then((movieList) => {\r\n                movieList.json().then((data) => {\r\n                    setMovie(data.results[Math.floor(Math.random() * 20)])\r\n                })\r\n            })\r\n\r\n    }\r\n    useEffect(fetchTrending, [])\r\n    const truncate = (overview) => {\r\n        if (overview) {\r\n            let arr = overview.split(\" \")\r\n            return arr.slice(0, 25).join(\" \") + \" ....\"\r\n        }\r\n        return overview\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <div\r\n                className=\"header_background_img\"\r\n                style={{\r\n                    backgroundSize: \"cover\",\r\n                    backgroundImage: `linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.2)),\r\n                    url('https://image.tmdb.org/t/p/original/${window.screen.width > 1000 ? movie?.backdrop_path : movie?.poster_path}')`,\r\n\r\n                }}\r\n            >\r\n                <div className=\"header_content\">\r\n                    <h1>{movie?.title || movie?.original_title || movie?.original_name || movie?.name}</h1>\r\n                    <p>{truncate(movie?.overview)}</p>\r\n                    <div className='header_content_buttons'>\r\n                        <NavLink to=\"/detail\" className='watch_btn_container header_btn'><button className=\"watch_btn\" onClick={() => changeDetail(movie)}><CgDetailsMore />MORE DETAIL</button></NavLink>\r\n                        <button className=\"header_btn play_btn\" onClick={(e) => playHandle(movie)}><AiFillCaretRight /> PLAY TRAILER</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react'\r\nimport { type, BASE_URL } from './request'\r\nimport './Row.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Row({ title, changeDetail }) {\r\n    const [MovieList, setMovieList] = useState([])\r\n    const fetchByTitle = async () => {\r\n        await fetch(`${BASE_URL}${type[title]}`)\r\n            .then((movieList) => {\r\n                movieList.json().then(data => {\r\n                    setMovieList(data.results)\r\n                })\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchByTitle()\r\n    }, [])\r\n    return (\r\n        <div className=\"Row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"Row_imgList\">\r\n                {MovieList.map(movie => (\r\n                    <NavLink to='/detail' className=\"Row_imgList_imgContainer\" key={movie?.id}>\r\n                        <img src={`https://image.tmdb.org/t/p/original/${window.screen.width > 1000 ? movie?.backdrop_path : movie?.poster_path}`}\r\n                            key={movie?.id} height='100%' onClick={() => changeDetail(movie)}\r\n                        />\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { db } from './firebase'\r\n\r\nfunction WishList({ changeDetail }) {\r\n    const [wishList, setWishList] = useState([])\r\n    const getWishList = () => {\r\n        db.collection(\"wishList\").onSnapshot((snapshot) => {\r\n            let tempList = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                movie: doc.data()\r\n            }))\r\n            setWishList(tempList)\r\n        })\r\n    }\r\n    useEffect(() => getWishList(), [])\r\n    return (\r\n        <div className=\"Row\">\r\n            <h2>My list</h2>\r\n            <div className=\"Row_imgList\">\r\n                {wishList?.map(movie => (\r\n                    <NavLink to='/detail' className=\"Row_imgList_imgContainer\" key={movie.id}>\r\n                        {/*because firebase separate id with the other, so we put them back\r\n                          *when we change detail movie in detailPage\r\n                        */}\r\n                        <img src={`https://image.tmdb.org/t/p/original${window.screen.width > 1000 ? movie.movie.backdrop_path : movie.movie.poster_path}`}\r\n                            key={movie.movie.id} height='100%' onClick={() => {\r\n                                let movieChange = { ...movie.movie }\r\n                                movieChange.id = movie.id\r\n                                changeDetail(movieChange)\r\n                            }}\r\n                        />\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { type } from './request'\r\nimport Row from './Row'\r\nimport { db } from './firebase'\r\nimport WishList from './WishList'\r\n\r\nfunction RowList({ changeDetail }) {\r\n    let arrType = Object.keys(type)\r\n\r\n    return (\r\n        <div>\r\n            <WishList changeDetail={changeDetail} />\r\n            {arrType.map((eachType) => (\r\n                <Row key={eachType} title={eachType} changeDetail={changeDetail} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowList\r\n","import React, { useState, useEffect } from 'react'\r\nimport './SearchMovies.css'\r\nimport { BASE_URL, key } from './request'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SearchMovies({ isSearchOpen, changeDetail }) {\r\n\r\n    const [searchInput, setSearchInput] = useState(\"\")\r\n    const [searchList, setSearchList] = useState([])\r\n\r\n    const searchOpen = {\r\n        transform: 'scaleX(1)'\r\n    }\r\n    const searchClose = {\r\n        transform: 'scaleX(0)'\r\n    }\r\n\r\n    const searchingMovie = async (searchInput) => {\r\n        if (searchInput.length >= 3) {\r\n            await fetch(`${BASE_URL}search/movie?api_key=${key}&query=${searchInput}`)\r\n                .then(doc => {\r\n                    doc.json().then(data => {\r\n                        console.log(data.results)\r\n                        setSearchList(data.results)\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            setSearchList([])\r\n        }\r\n    }\r\n    const handleChange = (input) => {\r\n        setSearchInput(input)\r\n    }\r\n    useEffect(() => searchingMovie(searchInput), [searchInput])\r\n\r\n    return (\r\n        <div className=\"searchMovies\" style={isSearchOpen ? searchOpen : searchClose}>\r\n            <input type='text' value={searchInput} onChange={(e) => handleChange(e.target.value)} />\r\n            <div className=\"searchMovies_movieList\"\r\n                style={searchList.length > 0 ? { height: 'calc(100vh - 57.5px)' }\r\n                    : { height: '0' }}>\r\n                {searchList.length > 0 ? searchList.map(movie => (\r\n                    <NavLink to='/detail' key={movie.id}>\r\n                        <div className=\"searchMovies_movie\" onClick={() => changeDetail(movie)}>\r\n                            <img src={`https://image.tmdb.org/t/p/original/${movie?.backdrop_path}`} height='100%' />\r\n                            <p>{movie?.name || movie?.original_title || movie?.original_name || movie?.title}</p>\r\n                        </div>\r\n                    </NavLink>\r\n                )) : <div></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchMovies\r\n","import React, { useState, useEffect } from 'react'\r\nimport { AiOutlineSearch, AiFillCaretDown, AiFillBell, AiOutlineClose } from 'react-icons/ai';\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Nav.css'\r\nimport SearchMovies from './SearchMovies'\r\n\r\nfunction Nav({ changeSection, changeDetail }) {\r\n    const linkStyle = {\r\n        color: '#fff'\r\n    }\r\n    const [isNavClose, setNavClose] = useState(true)\r\n    const [isBlackNav, setIsBlackNav] = useState(false)\r\n    const [isSearchOpen, setIsSearchOpen] = useState(false)\r\n    const navLinkStyleClose = {\r\n        transform: 'translateX(-500%)'\r\n    }\r\n    const navLinkStyleOpen = {\r\n        transform: 'translateX(-20%)'\r\n    }\r\n    const setSearch = () => {\r\n        console.log(isSearchOpen)\r\n        setIsSearchOpen(pre => !pre)\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener((\"scroll\"), () => {\r\n            if (window.scrollY > 580) setIsBlackNav(true)\r\n            else setIsBlackNav(false)\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <nav className={isBlackNav ? 'nav_black' : \"\"}>\r\n            <GiHamburgerMenu className=\"burger-icon\" onClick={() => setNavClose(false)} />\r\n            <img src={window.screen.width >= 1000 ?\r\n                \"https://th.bing.com/th/id/R.3483cbba02fe083b87330a99857f59ed?rik=ejgwaTp6m0Dv6g&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f05%2fNetflix-Logo.png&ehk=gJbypm3nuRFxW%2fGn3WbaXOcTVq6kNgynGml%2fdXD79fM%3d&risl=&pid=ImgRaw&r=0\" :\r\n                \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2015_N_logo.svg/1200px-Netflix_2015_N_logo.svg.png\"} />\r\n            <ul className=\"nav_link_list\"\r\n                style={window.screen.width < 1000 ?\r\n                    isNavClose ? navLinkStyleClose :\r\n                        navLinkStyleOpen : {}\r\n                }\r\n            >\r\n                <AiOutlineClose className=\"close-icon\" onClick={() => setNavClose(true)} />\r\n                <li className=\"nav_link_homePage\"><a href=\"#\" style={linkStyle}>Home</a></li>\r\n                <li onClick={(e) => changeSection(e.target.innerText)}><NavLink to=\"/section\">TV Shows</NavLink></li>\r\n                <li onClick={(e) => changeSection(e.target.innerText)}><NavLink to=\"/section\">Movies</NavLink></li>\r\n                <li onClick={(e) => changeSection(e.target.innerText)}><NavLink to=\"/section\">Latest</NavLink></li>\r\n                <li><a href=\"#\">My List</a></li>\r\n            </ul>\r\n            <div className=\"nav_right_column\">\r\n                <SearchMovies isSearchOpen={isSearchOpen} changeDetail={changeDetail} />\r\n                <AiOutlineSearch className=\"nav_right_column_icon\" onClick={() => setSearch()} />\r\n                <p>Search</p>\r\n                <AiFillBell className=\"nav_right_column_icon\" />\r\n                <img src=\"https://th.bing.com/th/id/R.8b61c1b9698d53bf246e1e245240ebee?rik=kDstmfK1wN4eWA&pid=ImgRaw&r=0\" />\r\n                <AiFillCaretDown className=\"nav_right_column_icon\" />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from 'react'\r\nimport \"./HomePage.css\"\r\nimport Header from './Header'\r\nimport RowList from './RowList';\r\nimport Nav from './Nav'\r\n\r\nfunction HomePage({ changeDetail, playHandle, addToWishList, changeSection }) {\r\n    return (\r\n        <div className=\"page\">\r\n            <Nav changeSection={changeSection} changeDetail={changeDetail} />\r\n            <Header playHandle={playHandle} changeDetail={changeDetail} addToWishList={addToWishList} playHandle={playHandle} />\r\n            <RowList changeDetail={changeDetail} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BASE_URL, key } from './request'\r\nimport { AiFillStar, AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"./SectionPage.css\"\r\n\r\nfunction SectionPage({ section, changeDetail }) {\r\n    const [movies, setMovies] = useState([])\r\n    const fetchSection = async (section) => {\r\n\r\n        if (section === 'TV Shows') {\r\n            await fetch(`${BASE_URL}discover/tv?api_key=${key}&sort_by=popularity.desc`)\r\n                .then(doc => {\r\n                    doc.json().then(data => {\r\n                        console.log(data.results)\r\n                        setMovies(data.results)\r\n                    })\r\n                })\r\n        }\r\n        if (section === \"Movies\") {\r\n            await fetch(`${BASE_URL}discover/movie?api_key=${key}&sort_by=popularity.desc`)\r\n                .then(doc => {\r\n                    doc.json().then(data => setMovies(data.results))\r\n                })\r\n        }\r\n        if (section === \"Latest\") {\r\n            await fetch(`${BASE_URL}discover/movie?api_key=${key}&primary_release_year=2021`)\r\n                .then(doc => {\r\n                    doc.json().then(data => setMovies(data.results))\r\n                })\r\n        }\r\n        window.scrollTo(0, 0)\r\n    }\r\n    const calculateVote = (vote) => {\r\n        let arr = []\r\n        console.log(Math.round(vote / 2))\r\n        for (let i = 0; i <= Math.round(vote / 2) - 1; i++) {\r\n            arr.push(1)\r\n        }\r\n        return arr;\r\n    }\r\n    const truncate = (overview) => {\r\n        if (overview) {\r\n            let arr = overview.split(\" \")\r\n            return arr.slice(0, 18).join(\" \") + \" ....\"\r\n        }\r\n        return overview\r\n    }\r\n    useEffect(() => fetchSection(section), [])\r\n    return (\r\n        <div className=\"page\">\r\n            <NavLink to=\"/netflix-clone-app/\">\r\n                <AiOutlineArrowLeft className=\"return_btn\" />\r\n            </NavLink>\r\n            <h1>{section}</h1>\r\n\r\n            <div className=\"section_movieList\">\r\n                {movies?.map(movie => (\r\n                    <NavLink to=\"/netflix-clone-app/detail/\">\r\n                        <div className=\"movie\"\r\n                            style={window.screen.width > 1000 ?\r\n                                { backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")` } :\r\n                                { backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.poster_path}\")` }\r\n                            }\r\n                            onClick={() => changeDetail(movie)}\r\n                        >\r\n                            <div className=\"section_movie_content\">\r\n                                <h1>{movie.name || movie?.title || movie?.original_title || movie?.original_name}</h1>\r\n                                <div className=\"voting_rate\">\r\n                                    <div className=\"voting_start\">{calculateVote(movie?.vote_average).map(() => <AiFillStar />)}</div>\r\n                                    <div className=\"voting_score\">{movie?.vote_average / 2}</div>\r\n                                </div>\r\n                                <p>{truncate(movie?.overview)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport TrailerVideo from './TrailerVideo'\r\nimport movieTrailer from 'movie-trailer'\r\nimport DetailPage from './DetailPage';\r\nimport HomePage from './HomePage';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { db } from './firebase'\r\nimport './NetflixApp.css'\r\nimport SectionPage from './SectionPage';\r\n\r\nfunction NetflixApp() {\r\n    //WL is initial for Watch List\r\n    const [movieTrailerURL, setMovieTrailerURL] = useState(\"\")\r\n    const [detailMovie, setDetailMovie] = useState({})\r\n    const [isTrailerShow, setIsTrailerShow] = useState(false)\r\n    const [section, setSection] = useState(\"Latest\")\r\n    const playHandle = (movie, e) => {\r\n\r\n        movieTrailer(movie?.title || movie?.original_title || movie?.original_name)\r\n            .then(response => {\r\n                //check if we can find the trailer\r\n                if (response) {\r\n                    //if the trailer is available set that trailer and show the video\r\n                    const urlParams = new URLSearchParams(new URL(response).search);\r\n                    setMovieTrailerURL(urlParams.get(\"v\"))\r\n                    //show the trailer\r\n                    setIsTrailerShow(true)\r\n                }\r\n                else {\r\n                    alert(\"Apology the movie is not available right now\")\r\n                }\r\n            })\r\n    }\r\n    const closeTrailer = () => {\r\n        setIsTrailerShow(false)\r\n    }\r\n    //method change detail movie in detail page\r\n    const changeDetail = (movie) => {\r\n        console.log(movie.id)\r\n        setDetailMovie(movie)\r\n    }\r\n\r\n    const addToWishList = (movie) => {\r\n        //because movie id is number so we need to use toString() method\r\n        const movieList = db.collection(\"wishList\").doc(movie?.id.toString());\r\n        movieList.get()\r\n            .then((doc) => {\r\n\r\n                db.collection(\"wishList\").doc(movie?.id.toString()).set({\r\n                    title: (movie?.title || movie?.original_title || movie?.original_name) ?? \"\",\r\n                    release_date: movie?.release_date ?? \"\",\r\n                    vote_average: movie?.vote_average ?? \"\",\r\n                    overview: movie?.overview ?? \"\",\r\n                    poster_path: movie?.poster_path ?? \"\",\r\n                    backdrop_path: movie?.backdrop_path ?? \"\"\r\n                })\r\n\r\n            })\r\n    }\r\n    const removeFromWishList = (movie) => {\r\n        if (Object.keys(movie).length !== 0 && movie.id !== undefined) {\r\n            db.collection(\"wishList\").doc(movie?.id.toString()).delete().then();\r\n        }\r\n    }\r\n    const changeSection = (section) => {\r\n        setSection(section)\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={({ location }) => (\r\n\r\n                <TransitionGroup>\r\n                    <CSSTransition timeout={window.screen.width > 1000 ? 600 : 400}\r\n                        classNames={location.pathname === '/netflix-clone-app/' ? 'transitionToLeft' :\r\n                            'transitionToRight'}\r\n                        key={location.key}>\r\n                        <Switch location={location}>\r\n                            <Route path='/netflix-clone-app/' exact component={() =>\r\n                                <HomePage\r\n                                    changeDetail={changeDetail}\r\n                                    playHandle={playHandle}\r\n                                    addToWishList={addToWishList}\r\n                                    playHandle={playHandle}\r\n                                    changeSection={changeSection}\r\n                                />} />\r\n                            <Route path='/detail' component={() =>\r\n                                <DetailPage\r\n                                    movie={detailMovie}\r\n                                    playHandle={playHandle}\r\n                                    addToWishList={addToWishList}\r\n                                    removeFromWishList={removeFromWishList}\r\n                                />}\r\n                            />\r\n                            <Route path=\"/section\" component={() =>\r\n                                <SectionPage\r\n                                    section={section}\r\n                                    changeDetail={changeDetail}\r\n                                />}\r\n                            />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            )} />\r\n\r\n            <TrailerVideo movieTrailerURL={movieTrailerURL} isTrailerShow={isTrailerShow} closeTrailer={closeTrailer} />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default NetflixApp\r\n"],"sourceRoot":""}